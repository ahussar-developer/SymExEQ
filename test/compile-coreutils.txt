# Downlaod source as a tar ball from here:
https://ftp.gnu.org/gnu/coreutils/
I chose v8.32

# x86 Architecture
## Install required dependencies
sudo apt install clang gcc gcc-i686-linux-gnu 
sudo apt install build-essential
sudo apt install gcc-multilib g++-multilib libc6-dev-i386
sudo apt install clang libc6-dev-i386


## Compile with clang
TIME_T_32_BIT_OK=yes CC=clang ./configure CFLAGS="-m32 -O0 -Wno-incompatible-function-pointer-types" LDFLAGS="-m32" --host=i686-pc-linux-gnu
make -j$(nproc)


## Compile with gcc
TIME_T_32_BIT_OK=yes CC=gcc ./configure CFLAGS="-m32 -O0" LDFLAGS="-m32" --host=i686-pc-linux-gnu
make -j$(nproc)

# ARM
## Install required dependencies
sudo apt-get install gcc-arm-linux-gnueabi # 32-bit compiler
sudo apt-get install gcc-arm-linux-gnueabihf  # For hard-float ABI
sudo apt-get install build-essential automake libtool
sudo apt-get install build-essential libc6-dev-armel-cross libc6-dev-armhf-cross

## Compile with gcc-arm (32-bit only)
TIME_T_32_BIT_OK=yes CC=arm-linux-gnueabi-gcc ./configure CFLAGS="-marm -O0" LDFLAGS="" --host=arm-linux-gnueabi
make -j$(nproc)

# Check Architecture and compiler
file <bianry>
Example output:
x86: src/true: ELF 32-bit LSB pie executable, Intel 80386, version 1 (SYSV), 
dynamically linked, interpreter /lib/ld-linux.so.2, BuildID[sha1]=80ac02c166fb82954814a3403c545e090a9f6fdd, 
for GNU/Linux 3.2.0, not stripped
arm: src/ls: ELF 32-bit LSB executable, ARM, EABI5 version 1 (SYSV), dynamically linked, interpreter /lib/ld-linux.so.3, BuildID[sha1]=e5e29c7d6ffe1940212d8bc33188aa8a0e501ea6, for GNU/Linux 3.2.0, not stripped


strings <binary> | grep -i <compiler>
Example output:
Ubuntu clang version 18.1.3 (1ubuntu1)


# Copy to another location from coreutils dir
find src/path/ -type f -executable -exec cp --parents {} ../dest/path/ \;
Example: find src/ -type f -executable -exec cp --parents {} ../test/bin/coreutils-clang/ \;